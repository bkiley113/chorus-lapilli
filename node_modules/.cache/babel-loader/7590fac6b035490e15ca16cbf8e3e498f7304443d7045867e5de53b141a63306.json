{"ast":null,"code":"var _jsxFileName = \"/Users/brandonkiley/Desktop/tictactoe/src/App.js\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  // const [xIsNext, setXIsNext] = useState(true);\n  // const [xmoves, setxmoves] = useState(0);\n  // const [omoves, setomoves] = useState(0);\n  // const [xmess, setxmess] = useState(null);\n  // const [omess, setomess] = useState(null);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n  // const [game, setgame] = useState('standard');\n  // const [select, setselect] = useState(null);\n  // const [moves, setmoves] = useState(0);\n  // const [canwin, setwin] = useState(null);\n\n  // useEffect(() => {\n  //   if (xmoves >= 3 && omoves >= 3) {\n  //     setxmess(\"X has made at least 3 moves!\");\n  //     setomess(\"O has made at least 3 moves!\");\n  //     setgame('chorus');\n  //   }\n  // }, [xmoves, omoves]);\n\n  // function handleClick(i){\n  //   if(game === 'standard'){\n  //     standard(i);\n  //   } else if (game === 'chorus'){\n  //     chorus(i);\n  //   }\n  // }\n\n  // function standard(i) {\n  //   if (calculateWinner(squares) || squares[i] || xmoves + omoves >= 6) {\n  //     return;\n  //   }\n  //   const nextSquares = squares.slice();\n  //   if (xIsNext) {\n  //     setxmoves(xmoves +1);\n  //     nextSquares[i] = 'X';\n  //   } else {\n  //     setomoves(omoves +1);\n\n  //     nextSquares[i] = 'O';\n  //   }\n  //   setSquares(nextSquares);\n  //   setXIsNext(!xIsNext);\n  // }\n\n  // function chorus(i){\n  //   const current = xIsNext ? 'X' : 'O';\n  //   if(select === null && moves === 0){\n  //     setselect(i);\n  //     setmoves(1);\n  //   } else if (i!=select && (squares[i] === null) && squares[select] === current && moves ==1 && canMove(select, i)){\n  //     const nextSq = squares.slice();\n  //     if (xIsNext) {\n  //       setxmoves(xmoves +1);\n  //       nextSq[i] = 'X';\n  //       nextSq[select] = null;\n  //     } else {\n  //       nextSq[i] = 'O';\n  //       nextSq[select] = null;\n  //     }\n  //     setSquares(nextSq);\n  //     setXIsNext(!xIsNext);\n  //     setselect(null);\n  //     setmoves(0);\n  //   } else{\n  //     setselect(null);\n  //     setmoves(0);\n  //     return;\n  //   }\n  // }\n\n  // const winner = calculateWinner(squares);\n  // let status;\n  // if (winner) {\n  //   status = 'Winner: ' + winner;\n  // } else {\n  //   status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  // }\n\n  // return (\n  //   <>\n  //     <div className=\"status\">{status}</div>\n  //     {/* <div className=\"xm\">{xmoves}</div>\n  //     <div className=\"om\">{omoves}</div> */}\n  //     <div className=\"xmess\">{xmess}</div>\n  //     <div className=\"omess\">{omess}</div>\n  //     <div className=\"canwin\">{canwin}</div>\n  //     <div className=\"board-row\">\n  //       <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n  //       <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n  //       <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n  //     </div>\n  //     <div className=\"board-row\">\n  //       <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n  //       <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n  //       <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n  //     </div>\n  //     <div className=\"board-row\">\n  //       <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n  //       <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n  //       <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n  //     </div>\n  //   </>\n  // );\n\n  const test = ['X', 'O', 'X', 'O', 'X', 'O', null, null, null];\n  if (canWin(test, 'X')) {\n    console.log('yes!');\n  } else {\n    console.log('no!');\n  }\n}\n_c2 = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nfunction canMove(src, dest) {\n  const moves = [[1, 3, 4], [0, 2, 3, 4, 5], [1, 4, 5], [0, 1, 4, 6, 7], [0, 1, 2, 3, 5, 6, 7, 8], [1, 2, 4, 7, 8], [3, 4, 7], [6, 3, 4, 5, 8], [4, 7, 5]];\n  switch (src) {\n    case 0:\n      if (moves[0].includes(dest)) {\n        return true;\n      } else {\n        return false;\n      }\n      ;\n    case 1:\n      if (moves[1].includes(dest)) {\n        return true;\n      } else {\n        return false;\n      }\n      ;\n    case 2:\n      if (moves[2].includes(dest)) {\n        return true;\n      } else {\n        return false;\n      }\n      ;\n    case 3:\n      if (moves[3].includes(dest)) {\n        return true;\n      } else {\n        return false;\n      }\n      ;\n    case 4:\n      if (moves[4].includes(dest)) {\n        return true;\n      } else {\n        return false;\n      }\n      ;\n    case 5:\n      if (moves[5].includes(dest)) {\n        return true;\n      } else {\n        return false;\n      }\n      ;\n    case 6:\n      if (moves[6].includes(dest)) {\n        return true;\n      } else {\n        return false;\n      }\n      ;\n    case 7:\n      if (moves[7].includes(dest)) {\n        return true;\n      } else {\n        return false;\n      }\n      ;\n    case 8:\n      if (moves[8].includes(dest)) {\n        return true;\n      } else {\n        return false;\n      }\n      ;\n    default:\n      return false;\n  }\n}\nfunction canWin(squares, turn) {\n  if (squares[0] === turn && squares[8] === null || squares[8] === turn && squares[0] === null) {\n    return true;\n  } else if (squares[1] === turn && squares[7] === null || squares[7] === turn && squares[1] === null) {\n    return true;\n  } else if (squares[2] === turn && squares[6] === null || squares[6] === turn && squares[2] === null) {\n    return true;\n  } else if (squares[3] === turn && squares[5] === null || squares[5] === turn && squares[3] === null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","test","canWin","console","log","_c2","calculateWinner","squares","lines","i","length","a","b","c","canMove","src","dest","moves","includes","turn","$RefreshReg$"],"sources":["/Users/brandonkiley/Desktop/tictactoe/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction Square({value, onSquareClick}) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nexport default function Board() {\n  // const [xIsNext, setXIsNext] = useState(true);\n  // const [xmoves, setxmoves] = useState(0);\n  // const [omoves, setomoves] = useState(0);\n  // const [xmess, setxmess] = useState(null);\n  // const [omess, setomess] = useState(null);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n  // const [game, setgame] = useState('standard');\n  // const [select, setselect] = useState(null);\n  // const [moves, setmoves] = useState(0);\n  // const [canwin, setwin] = useState(null);\n\n  // useEffect(() => {\n  //   if (xmoves >= 3 && omoves >= 3) {\n  //     setxmess(\"X has made at least 3 moves!\");\n  //     setomess(\"O has made at least 3 moves!\");\n  //     setgame('chorus');\n  //   }\n  // }, [xmoves, omoves]);\n\n  // function handleClick(i){\n  //   if(game === 'standard'){\n  //     standard(i);\n  //   } else if (game === 'chorus'){\n  //     chorus(i);\n  //   }\n  // }\n\n  // function standard(i) {\n  //   if (calculateWinner(squares) || squares[i] || xmoves + omoves >= 6) {\n  //     return;\n  //   }\n  //   const nextSquares = squares.slice();\n  //   if (xIsNext) {\n  //     setxmoves(xmoves +1);\n  //     nextSquares[i] = 'X';\n  //   } else {\n  //     setomoves(omoves +1);\n\n  //     nextSquares[i] = 'O';\n  //   }\n  //   setSquares(nextSquares);\n  //   setXIsNext(!xIsNext);\n  // }\n\n  // function chorus(i){\n  //   const current = xIsNext ? 'X' : 'O';\n  //   if(select === null && moves === 0){\n  //     setselect(i);\n  //     setmoves(1);\n  //   } else if (i!=select && (squares[i] === null) && squares[select] === current && moves ==1 && canMove(select, i)){\n  //     const nextSq = squares.slice();\n  //     if (xIsNext) {\n  //       setxmoves(xmoves +1);\n  //       nextSq[i] = 'X';\n  //       nextSq[select] = null;\n  //     } else {\n  //       nextSq[i] = 'O';\n  //       nextSq[select] = null;\n  //     }\n  //     setSquares(nextSq);\n  //     setXIsNext(!xIsNext);\n  //     setselect(null);\n  //     setmoves(0);\n  //   } else{\n  //     setselect(null);\n  //     setmoves(0);\n  //     return;\n  //   }\n  // }\n\n\n\n  // const winner = calculateWinner(squares);\n  // let status;\n  // if (winner) {\n  //   status = 'Winner: ' + winner;\n  // } else {\n  //   status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  // }\n\n  // return (\n  //   <>\n  //     <div className=\"status\">{status}</div>\n  //     {/* <div className=\"xm\">{xmoves}</div>\n  //     <div className=\"om\">{omoves}</div> */}\n  //     <div className=\"xmess\">{xmess}</div>\n  //     <div className=\"omess\">{omess}</div>\n  //     <div className=\"canwin\">{canwin}</div>\n  //     <div className=\"board-row\">\n  //       <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n  //       <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n  //       <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n  //     </div>\n  //     <div className=\"board-row\">\n  //       <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n  //       <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n  //       <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n  //     </div>\n  //     <div className=\"board-row\">\n  //       <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n  //       <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n  //       <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n  //     </div>\n  //   </>\n  // );\n\n  const test = ['X','O','X','O','X','O',null,null,null];\n\n  if(canWin(test, 'X')){\n    console.log('yes!');\n  } else {\n    console.log('no!');\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction canMove(src, dest){\n  const moves = [\n    [1,3,4],\n    [0,2,3,4,5],\n    [1,4,5],\n    [0,1,4,6,7],\n    [0,1,2,3,5,6,7,8],\n    [1,2,4,7,8],\n    [3,4,7],\n    [6,3,4,5,8],\n    [4,7,5]\n\n  ];\n  switch(src){\n    case 0:\n      if(moves[0].includes(dest)){return true}\n      else {return false};\n    case 1:\n      if(moves[1].includes(dest)){return true}\n      else {return false};\n    case 2:\n      if(moves[2].includes(dest)){return true}\n      else {return false};\n    case 3:\n      if(moves[3].includes(dest)){return true}\n      else {return false};\n    case 4:\n      if(moves[4].includes(dest)){return true}\n      else {return false};\n    case 5:\n      if(moves[5].includes(dest)){return true}\n      else {return false};\n    case 6:\n      if(moves[6].includes(dest)){return true}\n      else {return false};\n    case 7:\n      if(moves[7].includes(dest)){return true}\n      else {return false};\n    case 8:\n      if(moves[8].includes(dest)){return true}\n      else {return false};\n    default:\n      return false;\n  }\n}\n\n\n\n\n  function canWin(squares, turn) {\n  if((squares[0] === turn && squares[8] ===null) || squares[8] === turn && squares[0] === null){\n    return true;\n  }\n  else if((squares[1] === turn && squares[7] ===null) || squares[7] === turn && squares[1] === null){\n    return true;\n  }\n  else if((squares[2] === turn && squares[6] ===null) || squares[6] === turn && squares[2] === null){\n    return true;\n  }\n  else if((squares[3] === turn && squares[5] ===null) || squares[5] === turn && squares[3] === null){\n    return true;\n  }\n  else{\n    return false;\n  }\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,MAAMA,CAAC;EAACC,KAAK;EAAEC;AAAa,CAAC,EAAE;EACtC,oBACEH,OAAA;IAAQI,SAAS,EAAC,QAAQ;IAACC,OAAO,EAAEF,aAAc;IAAAG,QAAA,EAC/CJ;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACC,EAAA,GANQV,MAAM;AAQf,eAAe,SAASW,KAAKA,CAAA,EAAG;EAC9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,IAAI,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;EAErD,IAAGC,MAAM,CAACD,IAAI,EAAE,GAAG,CAAC,EAAC;IACnBE,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACrB,CAAC,MAAM;IACLD,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EACpB;AACF;AAACC,GAAA,GAlHuBL,KAAK;AAoH7B,SAASM,eAAeA,CAACC,OAAO,EAAE;EAChC,MAAMC,KAAK,GAAG,CACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV;EACD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,MAAM,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGL,KAAK,CAACC,CAAC,CAAC;IAC1B,IAAIF,OAAO,CAACI,CAAC,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAAC,KAAKJ,OAAO,CAACK,CAAC,CAAC,IAAIL,OAAO,CAACI,CAAC,CAAC,KAAKJ,OAAO,CAACM,CAAC,CAAC,EAAE;MACxE,OAAON,OAAO,CAACI,CAAC,CAAC;IACnB;EACF;EACA,OAAO,IAAI;AACb;AAEA,SAASG,OAAOA,CAACC,GAAG,EAAEC,IAAI,EAAC;EACzB,MAAMC,KAAK,GAAG,CACZ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACjB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAER;EACD,QAAOF,GAAG;IACR,KAAK,CAAC;MACJ,IAAGE,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAC;QAAC,OAAO,IAAI;MAAA,CAAC,MACnC;QAAC,OAAO,KAAK;MAAA;MAAC;IACrB,KAAK,CAAC;MACJ,IAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAC;QAAC,OAAO,IAAI;MAAA,CAAC,MACnC;QAAC,OAAO,KAAK;MAAA;MAAC;IACrB,KAAK,CAAC;MACJ,IAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAC;QAAC,OAAO,IAAI;MAAA,CAAC,MACnC;QAAC,OAAO,KAAK;MAAA;MAAC;IACrB,KAAK,CAAC;MACJ,IAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAC;QAAC,OAAO,IAAI;MAAA,CAAC,MACnC;QAAC,OAAO,KAAK;MAAA;MAAC;IACrB,KAAK,CAAC;MACJ,IAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAC;QAAC,OAAO,IAAI;MAAA,CAAC,MACnC;QAAC,OAAO,KAAK;MAAA;MAAC;IACrB,KAAK,CAAC;MACJ,IAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAC;QAAC,OAAO,IAAI;MAAA,CAAC,MACnC;QAAC,OAAO,KAAK;MAAA;MAAC;IACrB,KAAK,CAAC;MACJ,IAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAC;QAAC,OAAO,IAAI;MAAA,CAAC,MACnC;QAAC,OAAO,KAAK;MAAA;MAAC;IACrB,KAAK,CAAC;MACJ,IAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAC;QAAC,OAAO,IAAI;MAAA,CAAC,MACnC;QAAC,OAAO,KAAK;MAAA;MAAC;IACrB,KAAK,CAAC;MACJ,IAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAC;QAAC,OAAO,IAAI;MAAA,CAAC,MACnC;QAAC,OAAO,KAAK;MAAA;MAAC;IACrB;MACE,OAAO,KAAK;EAChB;AACF;AAKE,SAASd,MAAMA,CAACK,OAAO,EAAEY,IAAI,EAAE;EAC/B,IAAIZ,OAAO,CAAC,CAAC,CAAC,KAAKY,IAAI,IAAIZ,OAAO,CAAC,CAAC,CAAC,KAAI,IAAI,IAAKA,OAAO,CAAC,CAAC,CAAC,KAAKY,IAAI,IAAIZ,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,EAAC;IAC3F,OAAO,IAAI;EACb,CAAC,MACI,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAKY,IAAI,IAAIZ,OAAO,CAAC,CAAC,CAAC,KAAI,IAAI,IAAKA,OAAO,CAAC,CAAC,CAAC,KAAKY,IAAI,IAAIZ,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,EAAC;IAChG,OAAO,IAAI;EACb,CAAC,MACI,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAKY,IAAI,IAAIZ,OAAO,CAAC,CAAC,CAAC,KAAI,IAAI,IAAKA,OAAO,CAAC,CAAC,CAAC,KAAKY,IAAI,IAAIZ,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,EAAC;IAChG,OAAO,IAAI;EACb,CAAC,MACI,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAKY,IAAI,IAAIZ,OAAO,CAAC,CAAC,CAAC,KAAI,IAAI,IAAKA,OAAO,CAAC,CAAC,CAAC,KAAKY,IAAI,IAAIZ,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,EAAC;IAChG,OAAO,IAAI;EACb,CAAC,MACG;IACF,OAAO,KAAK;EACd;AACF;AAAC,IAAAR,EAAA,EAAAM,GAAA;AAAAe,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAf,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}